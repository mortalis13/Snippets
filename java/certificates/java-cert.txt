
keytool -genkey -alias server-alias -keyalg RSA -keypass changeit -storepass changeit -keystore keystore.jks
keytool -export -alias server-alias -storepass changeit -file server.cer -keystore keystore.jks
keytool -import -v -trustcacerts -alias server-alias -file server.cer -keystore cacerts.jks -keypass changeit -storepass changeit
keytool -list -v -keystore keystore.jks
keytool -list -keystore cacerts.jks

path %SystemRoot%\system32;%SystemRoot%;c:\tools\Java\jdk1.6.0_16\bin



keytool -genkey -v -alias {aliasname} -keyalg RSA -storetype PKCS12 -keystore client_keystore.p12 -storepass {anypassword} -keypass {anypassword}

keytool -genkey -v -alias rhkey -keyalg RSA -storetype PKCS12 -keystore client_keystore.p12 -storepass changeit -keypass changeit
keytool -importkeystore -deststorepass changeit -destkeypass changeit -destkeystore keystore.jks -srckeystore "c:\files\certs\client_keystore.p12" -srcstoretype PKCS12 -alias rhkey



--- https://virgo47.wordpress.com/2010/08/23/tomcat-web-application-with-ssl-client-certificates/ ---

openssl genrsa -out ca.key 1024
openssl req -new -x509 -days 3650 -key ca.key -out ca.crt

openssl genrsa -out localhost.key 2048
openssl req -new -key localhost.key -out localhost.csr
openssl ca -keyfile ca.key -cert ca.crt -out localhost.crt -infiles localhost.csr
openssl ca -keyfile ca.key -cert ca.crt -out localhost.crt -policy policy_anything -infiles localhost.csr

openssl genrsa -out client.key 2048
openssl ca -keyfile ca.key -cert ca.crt -out client.crt -policy policy_anything -infiles client.csr

openssl pkcs12 -export -in localhost.crt -inkey localhost.key -out localhost.p12 -name sercer
openssl pkcs12 -export -in client.crt -inkey client.key -out client.p12 -name client

keytool -importkeystore -deststorepass changeit -destkeypass changeit -destkeystore keystore.jks -srckeystore "c:\files\certs\certtest\localhost.p12" -srcstoretype PKCS12 -alias sercer
keytool -import -keystore cacerts.jks -storepass changeit -alias my_ca -file "c:\files\certs\certtest\ca.crt"
